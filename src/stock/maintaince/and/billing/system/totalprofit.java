/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stock.maintaince.and.billing.system;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static stock.maintaince.and.billing.system.globalvariables.PASSWORD;
import static stock.maintaince.and.billing.system.globalvariables.PATH;
import static stock.maintaince.and.billing.system.globalvariables.PLACE;
import static stock.maintaince.and.billing.system.globalvariables.USERNAME;

/**
 *
 * @author vishal
 */
public class totalprofit extends javax.swing.JInternalFrame  implements globalvariables{
double price,prices;
    /**
     * Creates new form stockssold
     */
    public totalprofit() {
        initComponents();
        Connection myconnection;
            try
            {
                myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
                    try
                    {
                        String a="select * from product_detail";
                        PreparedStatement mystatement=myconnection.prepareStatement(a); 
                        ResultSet myresult=mystatement.executeQuery();
                        if(myresult.next())
                        {
                            do
                            {
                                jComboBox2.addItem(myresult.getString("producttype"));
                            }while(myresult.next());
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(rootPane, "No Categories added yet");
                        }
                        
                        
                    }
                    catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
                    }
                    finally
                    {
                        myconnection.close();
                    }

            }
            catch(Exception e)
            {
                    JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
            }
    
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();

        setClosable(true);
        setTitle("TOTAL PROFIT GAINED");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BILL NUMBER", "PRODUCT TYPE", "PRODUCT NAME", "MANUFACTURER", "QUANTITY "
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("SHOW");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("TOTAL PROFIT");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("          SALES DATA");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Product Type" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BILL NUMBER" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SUPPLIER ID" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 881, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(59, 59, 59)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(156, 156, 156))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(80, 80, 80)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(358, 358, 358))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(234, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

if(jComboBox2.getSelectedIndex()>0)
 {
        try   
     {
            Connection myconnection;
            myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
            try
            {
              String query2="select * from bill_details where producttype=?"; 
              PreparedStatement mystatement2=myconnection.prepareStatement(query2);
             mystatement2.setString(1, jComboBox2.getSelectedItem().toString());
              ResultSet myresult2=mystatement2.executeQuery();
              DefaultTableModel mymodel=(DefaultTableModel) jTable1.getModel();
              mymodel.setRowCount(0);
              if(myresult2.next())
              {
               do
               {
                   String billno=myresult2.getString("bill_number");
               
                   String ptype=myresult2.getString("producttype");
                   String pname=myresult2.getString("productname");
                   String manu=myresult2.getString("manufacturer");
                   String qty=myresult2.getString("quantity");
                   prices=Double.parseDouble(myresult2.getString("price"));
                   
                   //
                   mymodel.addRow(new Object[]{billno,ptype,pname,manu,qty});
               }
                 while(myresult2.next());
              } 
                  else
                  {
                     JOptionPane.showMessageDialog(rootPane, "No Records Found.");
                          
                  }
              String query3="select * from product_detail where  bill_no=? and producttype=?";
              PreparedStatement mystatement3=myconnection.prepareStatement(query3);
               mystatement3.setString(1, jComboBox1.getSelectedItem().toString());
               mystatement3.setString(2, jComboBox2.getSelectedItem().toString());
               
              
               ResultSet myresult3=mystatement3.executeQuery();
                if(myresult3.next())
                {
                    price=Integer.parseInt(myresult3.getString("price"));
                }
               int total=0,net=0;
               double profit;
        int r = jTable1.getRowCount();

        DefaultTableModel mymodel1=(DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < r; i++)
        {

            total=Integer.parseInt(jTable1.getValueAt(i,4).toString());
            net += total;

        }
            profit=(net*prices)-(net*price);
        jTextField1.setText(String.valueOf(profit));
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in Query "+e.getMessage());
            }
            finally
            {
                myconnection.close();
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Error in Connection "+e.getMessage());
        }
 }
 else
 {
       JOptionPane.showMessageDialog(rootPane,"Please add producttype first");
 
//       Connection myconnection;
//            try
//            {
//                myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
//                    try
//                    {
//                        String a="select sum(quantity) from bill_details,bill_generation where date between ? and ?";
//                        PreparedStatement mystatement=myconnection.prepareStatement(a); 
//                        mystatement.setString(1, jDateChooser1.getDate().toString());
//                        mystatement.setString(1, jDateChooser2.getDate().toString());
//                        ResultSet myresult=mystatement.executeQuery();
//                        if(myresult.next())
//                        {
//                            do
//                            {
//                                String ptype,pname,manufacturer,price,quantity;
//                                ptype=myresult.getString("producttype");
//                                pname=myresult.getString("productname");
//                                manufacturer=myresult.getString("manufacturer");
//                                quantity=myresult.getString("manufacturer");
//             
//                                //int totalquantity=Double.parseDouble(price)*Integer.parseInt(quantity1);
//                            }while(myresult.next());
//                        }
//                        else
//                        {
//                            JOptionPane.showMessageDialog(rootPane, "No Recors found");
//                        }
//                        
//                    }
//                    catch(Exception e)
//                    {
//                        JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
//                    }
//                    finally
//                    {
//                        myconnection.close();
//                    }
//
//            }
//            catch(Exception e)
//            {
//                    JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
//            }
    }//GEN-LAST:event_jButton1ActionPerformed
    }
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        if(jComboBox2.getSelectedIndex()>0)
        {
            try
            {
                Connection myconnection;
                myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
                try
                {
                    String a="select * from product_detail where producttype=?";
                    PreparedStatement mystatement=myconnection.prepareStatement(a);
                    mystatement.setString(1, jComboBox2.getSelectedItem().toString());
                    ResultSet myresult=mystatement.executeQuery();

                    if(myresult.next())
                    {
                        jComboBox1.setVisible(true);
                        jComboBox1.removeAllItems();
                        jComboBox1.addItem("Choose Bill No");
                        do
                        {
                            jComboBox1.addItem(myresult.getString("bill_no"));
                        }
                        while(myresult.next());
                    }
                    else
                    {

                        JOptionPane.showMessageDialog(rootPane, "Add billno first");
                    }
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Error in Query " + e.getMessage());
                }
                finally
                {
                    myconnection.close();
                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
            }

        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
         if(jComboBox1.getSelectedIndex()>0)
        {
            try
            {
                Connection myconnection;
                myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
                try
                {
                    String a="select * from purchasetable where bill_no=?";
                    PreparedStatement mystatement=myconnection.prepareStatement(a);
                    mystatement.setString(1, jComboBox1.getSelectedItem().toString());
                    ResultSet myresult=mystatement.executeQuery();

                    if(myresult.next())
                    {
                        jComboBox3.setVisible(true);
                        jComboBox3.removeAllItems();
                        jComboBox3.addItem("Choose Supplier ID");
                        do
                        {
                            jComboBox3.addItem(myresult.getString("supplierid"));
                        }
                        while(myresult.next());
                    }
                    else
                    {

                        JOptionPane.showMessageDialog(rootPane, "Add Product Name first");
                    }
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Error in Query " + e.getMessage());
                }
                finally
                {
                    myconnection.close();
                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
            }

        }
    }//GEN-LAST:event_jComboBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
